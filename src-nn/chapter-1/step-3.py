'''
Со школы мы знаем, что чем круче график функции идёт вверх, тем больше значение производной (ибо производная - это скорость изменения функции). Естественно, крутизна графика влияет на ускорение нашего "шарика" из процедуры градиентного спуска. Вот вам теперь функция f(x)=x^4. Представьте себе, что наш "шарик" находится в точке с координатой a[0]=2. Мы запускаем процедуру градиентного спуска из точки a[0] c шагом h=0.1. Найдите позицию шарика на следующем шаге a[1]. Ну как: он прошел бОльшее расстояние, чем в предыдущей задаче (где мы брали функцию f(x)=x^2?
В ответе будет отрицательное число. Это означает, что шарик настолько разогнался, что проскочил точку минимума x=0. Взрыв градиента, однако!

f' = 4x**3
a[0] = 2
a[1] = 2 - 0.1 * (4 * 2**3) = 2 - 0.1 * 32 = 2 - 3.2 = -1.2
'''

def derivativeFn2(x):
    return 2 * x

def derivativeFn4(x):
    return 4 * (x**3)

def getPoint(a, h, fn, step):
    i = 0
    while i < step:
        aPrev = a
        a = round(a - h * fn(a), 2)
        i += 1
        print(
            'step', i,
            'a', a,
            'diff', abs(round(a - aPrev, 2))
        )
    return a

def main():
    # a22 = getPoint(2, 0.1, derivativeFn2, 2)
    # print('a22', a22)

    # a41 = getPoint(2, 0.1, derivativeFn4, 1)
    # print('a41', a41)

    print('2')
    getPoint(0.71, 0.1, derivativeFn2, 10)
    print('4')
    getPoint(0.71, 0.1, derivativeFn4, 10)

if __name__ == '__main__':
    main()
